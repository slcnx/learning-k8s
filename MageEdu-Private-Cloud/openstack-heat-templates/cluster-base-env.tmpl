# Author: MageEdu "<mage@magedu.com>"
# Date: 2023-11-28-01
# 创建多个主机实例，每个主机拥有两个网络接口，一个用于内部通信，一个负责接入外部网络
#
heat_template_version: 2021-04-16

description: Simple template to create kubernetes cluster hosts.

parameters:
  key_name:
    type: string
    label: Key Name
    description: Name of key-pair to be used for compute instance
    default: 'mykey'
  image_id:
    type: string
    label: Image ID
    description: Image to be used for compute instance
    default: 'ubuntu-22.04-server-amd64'
  master_nodes_flavor:
    type: string
    label: Master Node Instance Type
    description: Type of instance (flavor) to be used by master
    default: 'm2.c2r4d30'
  worker_nodes_flavor:
    type: string
    label: Worker Node Instance Type
    description: Type of instance (flavor) to be used by worker
    default: 'm2.c2r4d30'  
  external_network_id:
    type: string
    description: External Network Name
    default: 'provider'  

resources:
  # 创建虚拟网络
  k8snet01:
    type: OS::Neutron::Net

  # 创建虚拟子网
  k8snet01_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: k8snet01 }
      cidr: "192.168.10.0/24"
      gateway_ip: ""
      allocation_pools:
      - {start: "192.168.10.2", end: "192.168.10.200"}
      ip_version: 4
   
  # 创建安全组
  k8scluster_group:
    type: OS::Neutron::SecurityGroup
    properties:
      name: neutron_security_group
      rules:
        - direction: ingress
          ethertype: IPv4
          remote_mode: remote_ip_prefix
          remote_ip_prefix: 0.0.0.0/0
        - direction: ingress
          ethertype: IPv4
          remote_mode: remote_group_id
        - direction: ingress
          ethertype: IPv6
          remote_mode: remote_group_id

  # 创建master01实例
  instace_k8s_master01:
    type: OS::Nova::Server
    depends_on:
    - k8scluster_group
    - k8snet01
    - k8snet01_subnet
    properties:
      name: k8s-master01
      key_name: { get_param: key_name }
      image: { get_param: image_id }
      flavor: { get_param: master_nodes_flavor }
      security_groups:
      - { get_resource: "k8scluster_group" }
      networks:
      - network: { get_resource: k8snet01 }
        fixed_ip: "192.168.10.6"
      - network: { get_param: external_network_id }
     
  # 创建node01实例
  instace_k8s_node01:
    type: OS::Nova::Server
    depends_on: [ "k8scluster_group", "k8snet01", "k8snet01_subnet" ] 
    properties:
      name: k8s-node01
      key_name: { get_param: key_name }
      image: { get_param: image_id }
      flavor: { get_param: worker_nodes_flavor }
      security_groups:
      - { get_resource: "k8scluster_group" }
      networks:
      - network: { get_resource: k8snet01 }
        fixed_ip: "192.168.10.11"
      - network: { get_param: external_network_id }
   
  # 创建node02实例
  instace_k8s_node02:
    type: OS::Nova::Server
    depends_on: [ "k8scluster_group", "k8snet01", "k8snet01_subnet" ]
    properties:
      name: k8s-node02
      key_name: { get_param: key_name }
      image: { get_param: image_id }
      flavor: { get_param: worker_nodes_flavor }
      security_groups:
      - { get_resource: "k8scluster_group" }
      networks:
      - network: { get_resource: k8snet01 }
        fixed_ip: "192.168.10.12"
      - network: { get_param: external_network_id }

  # 创建node03实例
  instace_k8s_node03:
    type: OS::Nova::Server
    depends_on: [ "k8scluster_group", "k8snet01", "k8snet01_subnet" ]
    properties:
      name: k8s-node03
      key_name: { get_param: key_name }
      image: { get_param: image_id }
      flavor: { get_param: worker_nodes_flavor }
      security_groups:
      - { get_resource: "k8scluster_group" }
      networks:
      - network: { get_resource: k8snet01 }
        fixed_ip: "192.168.10.13"
      - network: { get_param: external_network_id }
